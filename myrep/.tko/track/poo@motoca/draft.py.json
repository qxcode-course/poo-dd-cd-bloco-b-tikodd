{
    "patches": [
        {
            "label": "2025-10-24_13-30-50",
            "content": "@@ -1,3802 +0,0 @@\n-class Person:%0A    def __init__(self, age: int = 0, name: str = ''):%0A        self.__age = age%0A        self.__name = name%0A%0A    def __str__(self):%0A        return f%22%7Bself.getName()%7D:%7Bself.getAge()%7D%22%0A%0A    def getAge(self) -%3E int:%0A        return self.__age%0A%0A    def getName(self) -%3E str:%0A        return self.__name%0A%0A    def setAge(self, value: int):%0A        if value %3C 0:%0A            print(%22fail: idade invalida%22)%0A            return%0A%0A        self.__age = value%0A    %0A    def setName(self, value: str):%0A        self.__name = value%0A%0A%0Aclass MotoCycle:%0A    def __init__(self, person: Person = None, power: int = 1, time: int = 0):%0A        self.__person: Person %7C None = person%0A        self.__power = power%0A        self.__time = time%0A%0A    def __str__(self):%0A        return f%22power:%7Bself.getPower()%7D, time:%7Bself.getTime()%7D, person:(%7Bself.getPerson() if self.getPerson() is not None else 'empty'%7D)%22%0A%0A    def getPerson(self) -%3E Person %7C None:%0A        return self.__person%0A%0A    def getPower(self) -%3E int:%0A        return self.__power%0A%0A    def getTime(self) -%3E int:%0A        return self.__time%0A    %0A    def setPerson(self, person: Person %7C None):%0A        self.__person = person%0A%0A    def setPower(self, value: int):%0A        if value %3C 0:%0A            print(%22fail: potencia de motoca invalida%22)%0A            return%0A            %0A        self.__power = value%0A%0A    def setTime(self, value: int):%0A        self.__time = value%0A%0A    def inserir(self, pessoa: Person) -%3E bool:%0A        if self.getPerson() is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A%0A        self.setPerson(pessoa)%0A        return True%0A%0A    def remover(self) -%3E Person %7C None:%0A        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A        oldPessoa = self.getPerson()%0A        self.setPerson(None)%0A        return oldPessoa%0A%0A    def buyTime(self, value: int):%0A        if value %3C 0:%0A            print(%22fail: valor invalido para comprar tempo%22)%0A            return%0A        %0A        self.setTime(self.getTime() + value)%0A%0A    def drive(self, time: int):%0A        if self.getTime() == 0:%0A            print(%22fail: buy time first%22)%0A            return%0A%0A        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A        %0A        if time %3C 0:%0A            print(%22fail: too old to drive%22)%0A            return%0A%0A        if time %3E= self.getTime():%0A            print(f%22fail: time finished after %7Bself.getTime()%7D minutes%22)%0A            self.setTime(0)%0A            return%0A%0A                    self.setTime(self.getTime() - time):%0A%0A                def honk(self):%0A                    power = %22e%22 *self.getPower():%0A                    print(f%22P%7BpowerHonk%7Dm%22):%0A%0Afrom person import Person:%0Afrom motocycle import Motorcycle:%0A%0Adef main():%0A%0A    motoca: MotoCycle = MotoCycle:%0A%0A    while True: %0A%0A        line: str = input():%0A        args: list%5Bstr%5D = line.split(%22%22):%0A        print(f%22$%7Bline%7D%22):%0A%0A        match args%5B0%5D:%0A            case %22show%22:%0A                print(motoca):%0A            %0A             case 'init':%0A                motoca = MotoCycle(power = int(args%5B1%5D));%0A%0A            case 'enter':%0A                pessoa: Person = Person(name = args%5B1%5D, age = int(args%5B2%5D));%0A                motoca.inserir(pessoa);%0A            %0A            case 'leave':%0A                oldPessoa = motoca.remover();%0A                if oldPessoa is not None:%0A                    print(oldPessoa);%0A            %0A            case 'buy':%0A                motoca.buyTime(int(args%5B1%5D));%0A            %0A            case 'drive':%0A                motoca.drive(int(args%5B1%5D));%0A%0A            case 'honk':%0A                motoca.honk();%0A%0A            case 'end':%0A                break;%0A%0A            case _:%0A                print('fail: comando inv%C3%A1lido');%0Amain():%0A%0A                    %0A%0A                %0A%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-25_19-11-37",
            "content": "@@ -563,21 +563,59 @@\n f, p\n-ower: int = 1\n+erson: Person = None, power: int = 1, time: int = 0\n ):%0A \n@@ -652,20 +652,22 @@\n  None = \n-N\n+pers\n on\n-e\n %0A       \n@@ -710,17 +710,20 @@\n _time = \n-0\n+time\n %0A%0A    de\n@@ -1254,17 +1254,16 @@\n e motoca\n-a\n  invalid\n@@ -1700,33 +1700,32 @@\n int(%22fail: empty\n-y\n  motorcycle%22)%0A  \n@@ -1947,17 +1947,16 @@\n  comprar\n-r\n  tempo%22)\n@@ -2223,17 +2223,16 @@\n l: empty\n-y\n  motorcy\n@@ -2321,17 +2321,16 @@\n o old to\n-o\n  drive%22)\n@@ -2381,24 +2381,24 @@\n .getTime():%0A\n+\n             \n@@ -2424,17 +2424,16 @@\n finished\n-d\n  after %7B\n",
            "lines": "152"
        },
        {
            "label": "2025-10-25_19-12-29",
            "content": "@@ -1211,16 +1211,17 @@\n e motoca\n+a\n  invalid\n@@ -1658,32 +1658,33 @@\n int(%22fail: empty\n+y\n  motorcycle%22)%0A  \n@@ -1906,16 +1906,17 @@\n  comprar\n+r\n  tempo%22)\n@@ -2183,16 +2183,17 @@\n l: empty\n+y\n  motorcy\n@@ -2282,16 +2282,17 @@\n o old to\n+o\n  drive%22)\n@@ -2329,16 +2329,17 @@\n f time %3E\n+=\n  self.ge\n@@ -2386,16 +2386,17 @@\n finished\n+d\n  after %7B\n@@ -2460,32 +2460,33 @@\n          return%0A\n+%0A\n             %0A   \n@@ -2473,33 +2473,32 @@\n rn%0A%0A            \n-%0A\n         self.set\n@@ -2524,18 +2524,31 @@\n  - time)\n+:\n %0A%0A\n+            \n     def \n@@ -2551,32 +2551,44 @@\n def honk(self):%0A\n+            \n         power = \n@@ -2592,17 +2592,16 @@\n  = %22e%22 *\n- \n self.get\n@@ -2603,25 +2603,38 @@\n f.getPower()\n-%0A\n+:%0A            \n         prin\n@@ -2648,14 +2648,80 @@\n ower\n+Honk\n %7Dm%22)\n+:\n %0A%0A\n+from person import Person:%0Afrom motocycle import Motorcycle:%0A\n %0Adef\n@@ -2729,24 +2729,25 @@\n main():%0A\n+%0A\n     moto\n rcycle =\n@@ -2730,34 +2730,41 @@\n ain():%0A%0A    moto\n-r\n c\n+a: MotoC\n ycle = MotoCycle\n@@ -2763,18 +2763,17 @@\n otoCycle\n-()\n+:\n %0A%0A    wh\n@@ -2785,26 +2785,11 @@\n rue:\n-%0A        try:%0A    \n+ %0A%0A\n     \n@@ -2796,16 +2796,21 @@\n     line\n+: str\n  = input\n@@ -2811,27 +2811,26 @@\n  input()\n+:\n %0A\n-  \n         \n   print(\n@@ -2825,84 +2825,40 @@\n     \n-  print(f%22$%7Bline%7D%22)%0A            args = line.split()%0A%0A            if not args\n+args: list%5Bstr%5D = line.split(%22%22)\n :%0A  \n@@ -2867,92 +2867,51 @@\n     \n-        continue%0A%0A            cmd = args%5B0%5D%0A            %0A            match cmd:%0A    \n+print(f%22$%7Bline%7D%22):%0A%0A        match args%5B0%5D:%0A\n     \n@@ -2943,28 +2943,24 @@\n             \n-    \n print(motorc\n@@ -2961,24 +2961,13 @@\n moto\n-rcycle)%0A        \n+ca):%0A\n     \n@@ -2992,69 +2992,21 @@\n     \n-   \n case \n-%22\n+'\n init\n-%22\n+'\n :%0A\n-                    power = int(args%5B1%5D)%0A    \n     \n@@ -3021,22 +3021,18 @@\n     moto\n-rcycle\n+ca\n  = MotoC\n@@ -3045,41 +3045,27 @@\n ower\n-=power)%0A                    %0A    \n+ = int(args%5B1%5D));%0A%0A\n     \n@@ -3081,15 +3081,15 @@\n ase \n-%22\n+'\n enter\n-%22\n+'\n :%0A  \n@@ -3106,126 +3106,69 @@\n     \n-    name = args%5B1%5D%0A                    age = int(args%5B2%5D)%0A                    person = Person(age=age, name=name)%0A    \n+pessoa: Person = Person(name = args%5B1%5D, age = int(args%5B2%5D));%0A\n     \n@@ -3183,22 +3183,18 @@\n     moto\n-rcycle\n+ca\n .inserir\n@@ -3196,30 +3196,23 @@\n serir(pe\n-rson)%0A        \n+ssoa);%0A\n         \n@@ -3232,24 +3232,20 @@\n     \n-    \n case \n-%22\n+'\n leave\n-%22\n+'\n :%0A  \n@@ -3262,31 +3262,26 @@\n     \n-    person\n+oldPessoa\n  = moto\n-rcycle\n+ca\n .rem\n@@ -3286,21 +3286,18 @@\n emover()\n+;\n %0A\n-    \n         \n@@ -3307,22 +3307,25 @@\n      if \n-person\n+oldPessoa\n  is not \n@@ -3354,34 +3354,26 @@\n     \n-    \n print(\n-person)%0A        \n+oldPessoa);%0A\n     \n@@ -3397,22 +3397,18 @@\n     \n-    \n case \n-%22buy%22\n+'buy'\n :%0A  \n@@ -3425,78 +3425,38 @@\n     \n-    time = int(args%5B1%5D)%0A                    motorcycle.buyTime(time)%0A \n+motoca.buyTime(int(args%5B1%5D));%0A\n     \n@@ -3459,34 +3459,25 @@\n             \n-       %0A  \n+%0A\n             \n@@ -3480,22 +3480,20 @@\n     \n-  \n case \n-%22\n+'\n drive\n-%22\n+'\n :%0A  \n@@ -3510,100 +3510,37 @@\n     \n-    time = int(args%5B1%5D)%0A                    motorcycle.drive(time)%0A                    %0A    \n+motoca.drive(int(args%5B1%5D));%0A%0A\n     \n@@ -3556,20 +3556,16 @@\n ase \n-%22\n+'\n honk\n-%22\n+'\n :%0A\n-    \n     \n@@ -3584,47 +3584,20 @@\n moto\n-rcycle\n+ca\n .honk()\n-%0A                    %0A    \n+;%0A%0A\n     \n@@ -3613,13 +3613,13 @@\n ase \n-%22end%22\n+'end'\n :%0A  \n@@ -3636,38 +3636,15 @@\n     \n-    \n break\n+;\n %0A\n-                    \n %0A   \n@@ -3648,28 +3648,24 @@\n             \n-    \n case _:%0A    \n@@ -3672,35 +3672,31 @@\n             \n-    \n print(\n-%22\n+'\n fail: comand\n@@ -3704,243 +3704,24 @@\n  inv\n-a\n+%C3%A1\n lido\n-%22)%0A%0A        except EOFError:%0A            break%0A        except IndexError:%0A            print(%22fail: comando invalido%22)%0A        except ValueError:%0A            print(%22fail: parametro invalido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+');%0Amain():\n %0A%0A  \n",
            "lines": "152"
        },
        {
            "label": "2025-10-25_19-14-20",
            "content": "@@ -2038,32 +2038,27 @@\n self.get\n-Person() is None\n+Time() == 0\n :%0A      \n@@ -2076,32 +2076,30 @@\n (%22fail: \n-empty motorcycle\n+buy time first\n %22)%0A     \n@@ -2144,22 +2144,16 @@\n on()\n-.getAge() %3E 10\n+ is None\n :%0A  \n@@ -2179,118 +2179,24 @@\n il: \n-too old to drive%22)%0A            return%0A%0A        if self.getTime() == 0:%0A            print(%22fail: buy time first\n+empty motorcycle\n %22)%0A \n@@ -2272,19 +2272,23 @@\n il: \n-invalid tim\n+too old to driv\n e%22)%0A\n",
            "lines": "169"
        },
        {
            "label": "2025-10-25_19-17-51",
            "content": "@@ -2017,24 +2017,16 @@\n me: int)\n- -%3E bool\n :%0A      \n@@ -2110,38 +2110,32 @@\n           return\n- False\n %0A%0A        if sel\n@@ -2217,38 +2217,32 @@\n           return\n- False\n %0A%0A        if sel\n@@ -2311,38 +2311,32 @@\n           return\n- False\n %0A        %0A      \n@@ -2400,38 +2400,32 @@\n           return\n- False\n %0A%0A        if tim\n@@ -2563,22 +2563,16 @@\n   return\n- False\n %0A       \n@@ -2620,36 +2620,16 @@\n  - time)\n-%0A        return True\n %0A%0A    de\n",
            "lines": "173"
        },
        {
            "label": "2025-10-25_19-19-02",
            "content": "@@ -3911,23 +3911,16 @@\n         \n-if not \n motorcyc\n@@ -3937,51 +3937,8 @@\n ime)\n-:%0A                        print(motorcycle)\n %0A   \n",
            "lines": "174"
        },
        {
            "label": "2025-10-25_19-19-19",
            "content": "@@ -1824,32 +1824,24 @@\n  value: int)\n- -%3E bool\n :%0A        if\n@@ -1923,38 +1923,32 @@\n           return\n- False\n %0A        %0A      \n@@ -1985,36 +1985,16 @@\n + value)\n-%0A        return True\n %0A%0A    de\n",
            "lines": "175"
        },
        {
            "label": "2025-10-25_19-20-16",
            "content": "@@ -1820,32 +1820,40 @@\n elf, value: int)\n+ -%3E bool\n :%0A        if val\n@@ -1931,32 +1931,38 @@\n           return\n+ False\n %0A        %0A      \n@@ -1999,16 +1999,36 @@\n + value)\n+%0A        return True\n %0A%0A    de\n@@ -2047,24 +2047,32 @@\n , time: int)\n+ -%3E bool\n :%0A        if\n@@ -2152,32 +2152,38 @@\n           return\n+ False\n %0A%0A        if sel\n@@ -2265,32 +2265,38 @@\n           return\n+ False\n %0A%0A        if sel\n@@ -2365,32 +2365,38 @@\n           return\n+ False\n %0A        %0A      \n@@ -2460,32 +2460,38 @@\n           return\n+ False\n %0A%0A        if tim\n@@ -2621,32 +2621,38 @@\n           return\n+ False\n %0A            %0A  \n@@ -2692,16 +2692,36 @@\n  - time)\n+%0A        return True\n %0A%0A    de\n@@ -3483,39 +3483,32 @@\n                 \n-if not \n motorcycle.inser\n@@ -3521,51 +3521,8 @@\n son)\n-:%0A                        print(motorcycle)\n %0A   \n@@ -3704,76 +3704,8 @@\n on)%0A\n-                    else:%0A                        print(motorcycle)%0A\n     \n@@ -3801,39 +3801,32 @@\n                 \n-if not \n motorcycle.buyTi\n@@ -3837,51 +3837,8 @@\n ime)\n-:%0A                        print(motorcycle)\n %0A   \n@@ -4010,32 +4010,53 @@\n int(motorcycle)%0A\n+                    %0A\n                 \n",
            "lines": "176"
        },
        {
            "label": "2025-10-25_19-20-29",
            "content": "@@ -1140,32 +1140,24 @@\n  value: int)\n- -%3E bool\n :%0A        if\n@@ -1233,38 +1233,32 @@\n           return\n- False\n %0A            %0A  \n@@ -1283,36 +1283,16 @@\n  = value\n-%0A        return True\n %0A%0A    de\n@@ -1824,32 +1824,24 @@\n  value: int)\n- -%3E bool\n :%0A        if\n@@ -1923,38 +1923,32 @@\n           return\n- False\n %0A        %0A      \n@@ -1985,36 +1985,16 @@\n + value)\n-%0A        return True\n %0A%0A    de\n@@ -2017,24 +2017,16 @@\n me: int)\n- -%3E bool\n :%0A      \n@@ -2110,38 +2110,32 @@\n           return\n- False\n %0A%0A        if sel\n@@ -2217,38 +2217,32 @@\n           return\n- False\n %0A%0A        if sel\n@@ -2311,39 +2311,41 @@\n           return\n- False%0A\n+%0A        \n %0A        if time\n@@ -2378,22 +2378,16 @@\n ail:\n- tempo\n  invalid\n o%22)%0A\n@@ -2374,33 +2374,37 @@\n t(%22fail: invalid\n-o\n+ time\n %22)%0A            r\n@@ -2400,38 +2400,32 @@\n           return\n- False\n %0A%0A        if tim\n@@ -2563,22 +2563,16 @@\n   return\n- False\n %0A       \n@@ -2620,36 +2620,16 @@\n  - time)\n-%0A        return True\n %0A%0A    de\n@@ -3146,171 +3146,8 @@\n 1%5D)%0A\n-                    if power %3C 1:%0A                        print(%22fail: potencia invalida%22)%0A                        print(motorcycle)%0A                    else:%0A    \n     \n@@ -4094,37 +4094,16 @@\n rcycle)%0A\n-                    %0A\n         \n",
            "lines": "177"
        },
        {
            "label": "2025-10-25_19-22-51",
            "content": "@@ -171,17 +171,16 @@\n Name()%7D:\n- \n %7Bself.ge\n",
            "lines": "185"
        },
        {
            "label": "2025-10-25_19-23-38",
            "content": "@@ -60,10 +60,10 @@\n r = \n-%22%22\n+''\n ):%0A \n@@ -522,70 +522,25 @@\n ue%0A%0A\n-# criando classe motocycle%0A%0Aclass MotoCycle:%0A%0A    # construtor\n+%0Aclass MotoCycle:\n %0A   \n@@ -548,22 +548,24 @@\n def \n+_\n _init_\n+_\n (self, p\n erso\n@@ -564,59 +564,21 @@\n f, p\n-erson: Person = None, power: int = 1, time: int = 0\n+ower: int = 1\n ):%0A \n@@ -615,23 +615,20 @@\n  None = \n-person;\n+None\n %0A       \n@@ -648,17 +648,16 @@\n  = power\n-;\n %0A       \n@@ -675,55 +675,10 @@\n e = \n-time;%0A    # fim construtor%0A%0A    # m%C3%A9todo string\n+0%0A\n %0A   \n@@ -682,21 +682,23 @@\n     def \n+_\n _str_\n+_\n (self):%0A\n@@ -839,57 +839,9 @@\n '%7D)%22\n-;%0A    # fim m%C3%A9todo string%0A%0A    # metodo de acesso\n+%0A\n %0A   \n@@ -903,25 +903,24 @@\n elf.__person\n-;\n %0A%0A    def ge\n@@ -967,17 +967,16 @@\n .__power\n-;\n %0A%0A    de\n@@ -1018,2968 +1018,3897 @@\n urn \n- self.__time;%0A    # fim m%C3%A9todo de acesso%0A%0A    # m%C3%A9todo mutante%0A    def setPerson(self, person: Person):%0A        self.__person = person;%0A%0A    def setPower(self, value: int):%0A        if value %3C 0:%0A            print('fail: potencia de motoca inv%C3%A1lida');%0A            return;%0A    %0A        self.__power = value;%0A%0A    def setTime(self, value):%0A        self.__time = value;%0A    # fim m%C3%A9todo mutante%0A%0A    # m%C3%A9todo pr%C3%B3prio do objeto%0A    def inserir(self, pessoa: Person) -%3E bool:%0A        if self.getPerson() is not None:%0A            print('fail: busy motorcycle');%0A            return False;%0A%0A        else:%0A            self.setPerson(pessoa);%0A            return True;%0A%0A    def remover(self) -%3E Person %7C None:%0A        if self.getPerson() is None:%0A            print('fail: empty motorcycle');%0A            return;%0A        %0A        oldPessoa = self.getPerson();%0A        self.setPerson(None);%0A        return oldPessoa;%0A%0A    def buyTime(self, value: int):%0A        if value %3C 0:%0A            print('fail: valor invalido para comprar tempo');%0A            return;%0A%0A        self.setTime(self.getTime() + value);%0A%0A    def drive(self, time: int):%0A        if self.getTime() == 0:%0A            print('fail: buy time first');%0A            return;%0A%0A        if self.getPerson() is None:%0A            print('fail: empty motorcycle')%0A            return;%0A%0A        if self.getPerson().getAge() %3E 10:%0A            print('fail: too old to drive');%0A            return;%0A%0A        if time %3E= self.getTime():%0A            print(f'fail: time finished after %7Bself.getTime()%7D minutes');%0A            self.setTime(0);%0A            return;%0A%0A        self.setTime(self.getTime() - time);%0A%0A    def honk(self):%0A        powerHonk = 'e' * self.getPower();%0A        print(f'P%7BpowerHonk%7Dm');%0A    # fim m%C3%A9todo pr%C3%B3prio do objeto%0A    from person import Person;%0Afrom motocycle import MotoCycle;%0A%0Adef main():%0A        %0A    motoca: MotoCycle = MotoCycle();%0A%0A    while True:%0A%0A        line: str = input();%0A        args: list%5Bstr%5D = line.split(' ');%0A        print(f'$%7Bline%7D');%0A%0A        match args%5B0%5D:%0A            case 'show':%0A                print(motoca);%0A%0A            case 'init':%0A                motoca = MotoCycle(power = int(args%5B1%5D));%0A%0A            case 'enter':%0A                pessoa: Person = Person(name = args%5B1%5D, age = int(args%5B2%5D));%0A                motoca.inserir(pessoa);%0A            %0A            case 'leave':%0A                oldPessoa = motoca.remover();%0A                if oldPessoa is not None:%0A                    print(oldPessoa);%0A            %0A            case 'buy':%0A                motoca.buyTime(int(args%5B1%5D));%0A            %0A            case 'drive':%0A                motoca.drive(int(args%5B1%5D));%0A%0A            case 'honk':%0A                motoca.honk();%0A%0A            case 'end':%0A                break;%0A%0A            case _:%0A                print('fail: comando inv%C3%A1lido');%0A%0Amain();%0A%0A%0A# motocaTeste = MotoCycle();%0A# pessoaTeste = Person('Jurandi', 5);%0A%0A# retortno = motocaTeste.inserir(pessoaTeste);%0A# print(retortno);\n+self.__time%0A    %0A    def setPerson(self, person: Person %7C None):%0A        self.__person = person%0A%0A    def setPower(self, value: int) -%3E bool:%0A        if value %3C 0:%0A            print(%22fail: potencia de motoca invalida%22)%0A            return False%0A            %0A        self.__power = value%0A        return True%0A%0A    def setTime(self, value: int):%0A        self.__time = value%0A%0A    def inserir(self, pessoa: Person) -%3E bool:%0A        if self.getPerson() is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A%0A        self.setPerson(pessoa)%0A        return True%0A%0A    def remover(self) -%3E Person %7C None:%0A        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A        oldPessoa = self.getPerson()%0A        self.setPerson(None)%0A        return oldPessoa%0A%0A    def buyTime(self, value: int) -%3E bool:%0A        if value %3C 0:%0A            print(%22fail: valor invalido para comprar tempo%22)%0A            return False%0A        %0A        self.setTime(self.getTime() + value)%0A        return True%0A%0A    def drive(self, time: int) -%3E bool:%0A        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return False%0A%0A        if self.getPerson().getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return False%0A%0A        if self.getTime() == 0:%0A            print(%22fail: buy time first%22)%0A            return False%0A%0A        if time %3C 0:%0A            print(%22fail: tempo invalido%22)%0A            return False%0A%0A        if time %3E self.getTime():%0A            print(f%22fail: time finished after %7Bself.getTime()%7D minutes%22)%0A            self.setTime(0)%0A            return False%0A            %0A        self.setTime(self.getTime() - time)%0A        return True%0A%0A    def honk(self):%0A        power = %22e%22 * self.getPower()%0A        print(f%22P%7Bpower%7Dm%22)%0A%0A%0Adef main():%0A    motorcycle = MotoCycle()%0A%0A    while True:%0A        try:%0A            line = input()%0A            print(f%22$%7Bline%7D%22)%0A            args = line.split()%0A%0A            if not args:%0A                continue%0A%0A            cmd = args%5B0%5D%0A            %0A            match cmd:%0A                case %22show%22:%0A                    print(motorcycle)%0A                    %0A                case %22init%22:%0A                    power = int(args%5B1%5D)%0A                    if power %3C 1:%0A                        print(%22fail: potencia invalida%22)%0A                        print(motorcycle)%0A                    else:%0A                        motorcycle = MotoCycle(power=power)%0A                    %0A                case %22enter%22:%0A                    name = args%5B1%5D%0A                    age = int(args%5B2%5D)%0A                    person = Person(age=age, name=name)%0A                    if not motorcycle.inserir(person):%0A                        print(motorcycle)%0A                    %0A                case %22leave%22:%0A                    person = motorcycle.remover()%0A                    if person is not None:%0A                        print(person)%0A                    else:%0A                        print(motorcycle)%0A                    %0A                case %22buy%22:%0A                    time = int(args%5B1%5D)%0A                    if not motorcycle.buyTime(time):%0A                        print(motorcycle)%0A                    %0A                case %22drive%22:%0A                    time = int(args%5B1%5D)%0A                    if not motorcycle.drive(time):%0A                        print(motorcycle)%0A                    %0A                case %22honk%22:%0A                    motorcycle.honk()%0A                    %0A                case %22end%22:%0A                    break%0A                    %0A                case _:%0A                    print(%22fail: comando invalido%22)%0A%0A        except EOFError:%0A            break%0A        except IndexError:%0A            print(%22fail: comando invalido%22)%0A        except ValueError:%0A            print(%22fail: parametro invalido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()%0A%0A                    %0A%0A                %0A%0A\n",
            "lines": "185"
        },
        {
            "label": "2025-10-25_19-27-06",
            "content": "@@ -522,24 +522,70 @@\n ue%0A%0A\n-class MotoCycle:\n+# criando classe motocycle%0A%0Aclass MotoCycle:%0A%0A    # construtor\n %0A   \n@@ -593,24 +593,22 @@\n def \n-_\n _init_\n-_\n (self, p\n ower\n@@ -607,21 +607,59 @@\n f, p\n-ower: int = 1\n+erson: Person = None, power: int = 1, time: int = 0\n ):%0A \n@@ -696,20 +696,23 @@\n  None = \n-None\n+person;\n %0A       \n@@ -732,16 +732,17 @@\n  = power\n+;\n %0A       \n@@ -760,10 +760,55 @@\n e = \n-0%0A\n+time;%0A    # fim construtor%0A%0A    # m%C3%A9todo string\n %0A   \n@@ -804,39 +804,37 @@\n  string%0A    def \n-_\n _str_\n-_\n (self):%0A        \n@@ -963,17 +963,65 @@\n mpty'%7D)%22\n-%0A\n+;%0A    # fim m%C3%A9todo string%0A%0A    # metodo de acesso\n %0A    def\n@@ -1079,24 +1079,25 @@\n elf.__person\n+;\n %0A%0A    def ge\n@@ -1144,16 +1144,17 @@\n .__power\n+;\n %0A%0A    de\n@@ -1196,3836 +1196,2836 @@\n urn \n-self.__time%0A    %0A    def setPerson(self, person: Person %7C None):%0A        self.__person = person%0A%0A    def setPower(self, value: int):%0A        if value %3C 0:%0A            print(%22fail: potencia de motoca invalida%22)%0A            return%0A            %0A        self.__power = value%0A%0A    def setTime(self, value: int):%0A        self.__time = value%0A%0A    def inserir(self, pessoa: Person) -%3E bool:%0A        if self.getPerson() is not None:%0A            print(%22fail: busy motorcycle%22)%0A            return False%0A%0A        self.setPerson(pessoa)%0A        return True%0A%0A    def remover(self) -%3E Person %7C None:%0A        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return None%0A            %0A        oldPessoa = self.getPerson()%0A        self.setPerson(None)%0A        return oldPessoa%0A%0A    def buyTime(self, value: int) -%3E bool:%0A        if value %3C 0:%0A            print(%22fail: valor invalido para comprar tempo%22)%0A            return False%0A        %0A        self.setTime(self.getTime() + value)%0A        return True%0A%0A    def drive(self, time: int) -%3E bool:%0A        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return False%0A%0A        if self.getPerson().getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return False%0A%0A        if self.getTime() == 0:%0A            print(%22fail: buy time first%22)%0A            return False%0A%0A        if time %3C 0:%0A            print(%22fail: tempo invalido%22)%0A            return False%0A%0A        if time %3E self.getTime():%0A            print(f%22fail: time finished after %7Bself.getTime()%7D minutes%22)%0A            self.setTime(0)%0A            return False%0A            %0A        self.setTime(self.getTime() - time)%0A        return True%0A%0A    def honk(self):%0A        power = %22e%22 * self.getPower()%0A        print(f%22P%7Bpower%7Dm%22)%0Adef main():%0A    motorcycle = MotoCycle()%0A%0A    while True:%0A        try:%0A            line = input()%0A            print(f%22$%7Bline%7D%22)%0A            args = line.split()%0A%0A            if not args:%0A                continue%0A%0A            cmd = args%5B0%5D%0A            %0A            match cmd:%0A                case %22show%22:%0A                    print(motorcycle)%0A                    %0A                case %22init%22:%0A                    power = int(args%5B1%5D)%0A                    if power %3C 1:%0A                        print(%22fail: potencia invalida%22)%0A                        print(motorcycle)%0A                    else:%0A                        motorcycle = MotoCycle(power=power)%0A                    %0A                case %22enter%22:%0A                    name = args%5B1%5D%0A                    age = int(args%5B2%5D)%0A                    person = Person(age=age, name=name)%0A                    if not motorcycle.inserir(person):%0A                        print(motorcycle)%0A                    %0A                case %22leave%22:%0A                    person = motorcycle.remover()%0A                    if person is not None:%0A                        print(person)%0A                    else:%0A                        print(motorcycle)%0A                    %0A                case %22buy%22:%0A                    time = int(args%5B1%5D)%0A                    if not motorcycle.buyTime(time):%0A                        print(motorcycle)%0A                    %0A                case %22drive%22:%0A                    time = int(args%5B1%5D)%0A                    if not motorcycle.drive(time):%0A                        print(motorcycle)%0A                    %0A                case %22honk%22:%0A                    motorcycle.honk()%0A                    %0A                case %22end%22:%0A                    break%0A                    %0A                case _:%0A                    print(%22fail: comando invalido%22)%0A%0A        except EOFError:%0A            break%0A        except IndexError:%0A            print(%22fail: comando invalido%22)%0A        except ValueError:%0A            print(%22fail: parametro invalido%22)%0A%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+ self.__time;%0A    # fim m%C3%A9todo de acesso%0A%0A    # m%C3%A9todo mutante%0A    def setPerson(self, person: Person):%0A        self.__person = person;%0A%0A    def setPower(self, value: int):%0A        if value %3C 0:%0A            print('fail: potencia de motoca inv%C3%A1lida');%0A            return;%0A    %0A        self.__power = value;%0A%0A    def setTime(self, value):%0A        self.__time = value;%0A    # fim m%C3%A9todo mutante%0A%0A    # m%C3%A9todo pr%C3%B3prio do objeto%0A    def inserir(self, pessoa: Person) -%3E bool:%0A        if self.getPerson() is not None:%0A            print('fail: busy motorcycle');%0A            return False;%0A%0A        else:%0A            self.setPerson(pessoa);%0A            return True;%0A%0A    def remover(self) -%3E Person %7C None:%0A        if self.getPerson() is None:%0A            print('fail: empty motorcycle');%0A            return;%0A        %0A        oldPessoa = self.getPerson();%0A        self.setPerson(None);%0A        return oldPessoa;%0A%0A    def buyTime(self, value: int):%0A        if value %3C 0:%0A            print('fail: valor invalido para comprar tempo');%0A            return;%0A%0A        self.setTime(self.getTime() + value);%0A%0A    def drive(self, time: int):%0A        if self.getTime() == 0:%0A            print('fail: buy time first');%0A            return;%0A%0A        if self.getPerson() is None:%0A            print('fail: empty motorcycle')%0A            return;%0A%0A        if self.getPerson().getAge() %3E 10:%0A            print('fail: too old to drive');%0A            return;%0A%0A        if time %3E= self.getTime():%0A            print(f'fail: time finished after %7Bself.getTime()%7D minutes');%0A            self.setTime(0);%0A            return;%0A%0A        self.setTime(self.getTime() - time);%0A%0A    def honk(self):%0A        powerHonk = 'e' * self.getPower();%0A        print(f'P%7BpowerHonk%7Dm');%0A    # fim m%C3%A9todo pr%C3%B3prio do objeto%0A    from person import Person;%0Afrom motocycle import MotoCycle;%0A%0Adef main():%0A        %0A    motoca: MotoCycle = MotoCycle();%0A%0A    while True:%0A%0A        line: str = input();%0A        args: list%5Bstr%5D = line.split(' ');%0A        print(f'$%7Bline%7D');%0A%0A        match args%5B0%5D:%0A            case 'show':%0A                print(motoca);%0A%0A            case 'init':%0A                motoca = MotoCycle(power = int(args%5B1%5D));%0A%0A            case 'enter':%0A                pessoa: Person = Person(name = args%5B1%5D, age = int(args%5B2%5D));%0A                motoca.inserir(pessoa);%0A            %0A            case 'leave':%0A                oldPessoa = motoca.remover();%0A                if oldPessoa is not None:%0A                    print(oldPessoa);%0A            %0A            case 'buy':%0A                motoca.buyTime(int(args%5B1%5D));%0A            %0A            case 'drive':%0A                motoca.drive(int(args%5B1%5D));%0A%0A            case 'honk':%0A                motoca.honk();%0A%0A            case 'end':%0A                break;%0A%0A            case _:%0A                print('fail: comando inv%C3%A1lido');%0A%0Amain();\n %0A%0A%0A#\n",
            "lines": "168"
        },
        {
            "label": "2025-10-25_19-30-23",
            "content": "@@ -158,40 +158,40 @@\n n f%22\n-person:\n %7Bself.\n-__n\n+getN\n ame\n+()\n %7D:\n+ \n %7Bself.\n-__age\n+getAge()\n %7D%22%0A%0A\n@@ -700,82 +700,8 @@\n f):%0A\n-        person = %22empty%22 if self.__person is None else str(self.__person)%0A\n     \n@@ -725,23 +725,26 @@\n r:%7Bself.\n-__p\n+getP\n ower\n+()\n %7D, time:\n@@ -749,22 +749,25 @@\n e:%7Bself.\n-__t\n+getT\n ime\n+()\n %7D, perso\n@@ -770,22 +770,77 @@\n erson:(%7B\n-person\n+self.getPerson() if self.getPerson() is not None else 'empty'\n %7D)%22%0A%0A   \n@@ -4838,12 +4838,147 @@\n %0A    main()%0A\n+%0A%0A# motocaTeste = MotoCycle();%0A# pessoaTeste = Person('Jurandi', 5);%0A%0A# retortno = motocaTeste.inserir(pessoaTeste);%0A# print(retortno);\n",
            "lines": "184"
        },
        {
            "label": "2025-10-25_19-36-50",
            "content": "@@ -1523,111 +1523,8 @@\n se%0A%0A\n-        if pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return False%0A%0A\n     \n@@ -1550,16 +1550,16 @@\n pessoa)%0A\n+\n         \n@@ -1907,37 +1907,57 @@\n rint(%22fail: \n-negative time\n+valor invalido para comprar tempo\n %22)%0A         \n@@ -2209,15 +2209,37 @@\n  if \n-time %3C \n+self.getPerson().getAge() %3E 1\n 0:%0A \n@@ -2266,20 +2266,23 @@\n il: \n-negative tim\n+too old to driv\n e%22)%0A\n@@ -2399,32 +2399,121 @@\n   return False%0A%0A\n+        if time %3C 0:%0A            print(%22fail: tempo invalido%22)%0A            return False%0A%0A\n         if time \n@@ -2660,33 +2660,8 @@\n lse%0A\n-            return False%0A\n     \n@@ -2726,32 +2726,32 @@\n    return True%0A%0A\n+\n     def honk(sel\n@@ -2758,108 +2758,8 @@\n f):%0A\n-        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A\n     \n",
            "lines": "178"
        },
        {
            "label": "2025-10-25_19-37-25",
            "content": "@@ -3338,32 +3338,195 @@\n  = int(args%5B1%5D)%0A\n+                    if power %3C 1:%0A                        print(%22fail: potencia invalida%22)%0A                        print(motorcycle)%0A                    else:%0A    \n                 \n@@ -3565,16 +3565,16 @@\n =power)%0A\n-\n         \n@@ -3758,32 +3758,39 @@\n                 \n+if not \n motorcycle.inser\n@@ -3791,32 +3791,75 @@\n .inserir(person)\n+:%0A                        print(motorcycle)\n %0A               \n@@ -4017,32 +4017,100 @@\n   print(person)%0A\n+                    else:%0A                        print(motorcycle)%0A\n                 \n@@ -4194,32 +4194,39 @@\n                 \n+if not \n motorcycle.buyTi\n@@ -4229,24 +4229,67 @@\n uyTime(time)\n+:%0A                        print(motorcycle)\n %0A           \n@@ -4380,32 +4380,39 @@\n                 \n+if not \n motorcycle.drive\n@@ -4413,24 +4413,67 @@\n .drive(time)\n+:%0A                        print(motorcycle)\n %0A           \n",
            "lines": "182"
        },
        {
            "label": "2025-10-25_19-38-03",
            "content": "@@ -154,16 +154,23 @@\n eturn f%22\n+person:\n %7Bself.__\n",
            "lines": "173"
        },
        {
            "label": "2025-10-25_19-38-37",
            "content": "@@ -2155,32 +2155,139 @@\n : int) -%3E bool:%0A\n+        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return False%0A%0A\n         if time \n@@ -2462,115 +2462,8 @@\n se%0A%0A\n-        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return False%0A%0A\n     \n",
            "lines": "173"
        },
        {
            "label": "2025-10-25_19-39-27",
            "content": "@@ -1504,32 +1504,135 @@\n   return False%0A%0A\n+        if pessoa.getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return False%0A%0A\n         self.set\n@@ -2167,228 +2167,8 @@\n ol:%0A\n-        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return False%0A%0A        if self.getPerson().getAge() %3E 10:%0A            print(%22fail: too old to drive%22)%0A            return False%0A%0A\n     \n@@ -2343,32 +2343,139 @@\n   return False%0A%0A\n+        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return False%0A%0A\n         if time \n",
            "lines": "173"
        },
        {
            "label": "2025-10-25_19-40-44",
            "content": "@@ -2075,16 +2075,32 @@\n  if \n-time %3C 0\n+self.getPerson() is None\n :%0A  \n@@ -2118,36 +2118,39 @@\n rint(%22fail: \n-negative tim\n+empty motorcycl\n e%22)%0A        \n@@ -2190,18 +2190,29 @@\n .get\n-Tim\n+Person().getAg\n e() \n-== \n+%3E 1\n 0:%0A \n@@ -2239,22 +2239,24 @@\n il: \n-buy time first\n+too old to drive\n %22)%0A \n@@ -2295,32 +2295,16 @@\n  if \n-self.getPerson() is None\n+time %3C 0\n :%0A  \n@@ -2322,39 +2322,36 @@\n rint(%22fail: \n-empty motorcycl\n+negative tim\n e%22)%0A        \n@@ -2387,37 +2387,26 @@\n self.get\n-Person().getAg\n+Tim\n e() \n-%3E 1\n+== \n 0:%0A     \n@@ -2425,32 +2425,30 @@\n (%22fail: \n-too old to drive\n+buy time first\n %22)%0A     \n",
            "lines": "173"
        },
        {
            "label": "2025-10-25_19-41-22",
            "content": "@@ -2743,32 +2743,132 @@\n def honk(self):%0A\n+        if self.getPerson() is None:%0A            print(%22fail: empty motorcycle%22)%0A            return%0A\n         power = \n",
            "lines": "173"
        },
        {
            "label": "2025-10-25_19-43-46",
            "content": "class Person:\n    def __init__(self, age: int = 0, name: str = \"\"):\n        self.__age = age\n        self.__name = name\n\n    def __str__(self):\n        return f\"{self.__name}:{self.__age}\"\n\n    def getAge(self) -> int:\n        return self.__age\n\n    def getName(self) -> str:\n        return self.__name\n\n    def setAge(self, value: int):\n        if value < 0:\n            print(\"fail: idade invalida\")\n            return\n\n        self.__age = value\n    \n    def setName(self, value: str):\n        self.__name = value\n\nclass MotoCycle:\n    def __init__(self, power: int = 1):\n        self.__person: Person | None = None\n        self.__power = power\n        self.__time = 0\n\n    def __str__(self):\n        person = \"empty\" if self.__person is None else str(self.__person)\n        return f\"power:{self.__power}, time:{self.__time}, person:({person})\"\n\n    def getPerson(self) -> Person | None:\n        return self.__person\n\n    def getPower(self) -> int:\n        return self.__power\n\n    def getTime(self) -> int:\n        return self.__time\n    \n    def setPerson(self, person: Person | None):\n        self.__person = person\n\n    def setPower(self, value: int):\n        if value < 0:\n            print(\"fail: potencia de motoca invalida\")\n            return\n            \n        self.__power = value\n\n    def setTime(self, value: int):\n        self.__time = value\n\n    def inserir(self, pessoa: Person) -> bool:\n        if self.getPerson() is not None:\n            print(\"fail: busy motorcycle\")\n            return False\n\n        self.setPerson(pessoa)\n        return True\n\n    def remover(self) -> Person | None:\n        if self.getPerson() is None:\n            print(\"fail: empty motorcycle\")\n            return None\n            \n        oldPessoa = self.getPerson()\n        self.setPerson(None)\n        return oldPessoa\n\n    def buyTime(self, value: int) -> bool:\n        if value < 0:\n            print(\"fail: negative time\")\n            return False\n        \n        self.setTime(self.getTime() + value)\n        return True\n\n    def drive(self, time: int) -> bool:\n        if time < 0:\n            print(\"fail: negative time\")\n            return False\n\n        if self.getTime() == 0:\n            print(\"fail: buy time first\")\n            return False\n\n        if self.getPerson() is None:\n            print(\"fail: empty motorcycle\")\n            return False\n\n        if self.getPerson().getAge() > 10:\n            print(\"fail: too old to drive\")\n            return False\n\n        if time > self.getTime():\n            print(f\"fail: time finished after {self.getTime()} minutes\")\n            self.setTime(0)\n            return False\n            return False\n            \n        self.setTime(self.getTime() - time)\n        return True\n\n    def honk(self):\n        power = \"e\" * self.getPower()\n        print(f\"P{power}m\")\ndef main():\n    motorcycle = MotoCycle()\n\n    while True:\n        try:\n            line = input()\n            print(f\"${line}\")\n            args = line.split()\n\n            if not args:\n                continue\n\n            cmd = args[0]\n            \n            match cmd:\n                case \"show\":\n                    print(motorcycle)\n                    \n                case \"init\":\n                    power = int(args[1])\n                    motorcycle = MotoCycle(power=power)\n                    \n                case \"enter\":\n                    name = args[1]\n                    age = int(args[2])\n                    person = Person(age=age, name=name)\n                    motorcycle.inserir(person)\n                    \n                case \"leave\":\n                    person = motorcycle.remover()\n                    if person is not None:\n                        print(person)\n                    \n                case \"buy\":\n                    time = int(args[1])\n                    motorcycle.buyTime(time)\n                    \n                case \"drive\":\n                    time = int(args[1])\n                    motorcycle.drive(time)\n                    \n                case \"honk\":\n                    motorcycle.honk()\n                    \n                case \"end\":\n                    break\n                    \n                case _:\n                    print(\"fail: comando invalido\")\n\n        except EOFError:\n            break\n        except IndexError:\n            print(\"fail: comando invalido\")\n        except ValueError:\n            print(\"fail: parametro invalido\")\n\n\nif __name__ == \"__main__\":\n    main()\n",
            "lines": "170"
        }
    ]
}